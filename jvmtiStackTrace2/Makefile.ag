# Define a variable for classpath



ifeq ($(shell uname), Linux)
  SYSINC=linux
  DEFINES=-DLINUX
  CURRENT="/home/ubuntubase/agd/jvmtiStackTraceTest/jvmtiStackTrace2"
  ifeq ($(shell java -version 2>&1|grep 9.0.4 >/dev/null; printf $$?),0)
  	JAVA_HOME=/usr/lib/jvm/jdk-9.0.4
  else
  	ifeq ($(shell java -version 2>&1|grep 1.8.0 >/dev/null; printf $$?),0)
  		JAVA_HOME=/usr/lib/jvm/jdk1.8.0_162
  	endif
  endif
  JAVA=java
  JAVAC=javac
  JAVAH=javah
  GCC=gcc
  OPTIONS= -shared -fPIC
  TARGET=StackTrace.so
else 
  ifeq ($(shell uname), CYGWIN_NT-10.0)
    SYSINC=win32
    DEFINES=-DWINDOWS
    CURRENT="C:/Users/agd/jvmtiStackTraceTest/jvmtiStackTrace2"
    JAVA_HOME=C:/Program Files/Java/jdk1.8.0_144
    JAVA=$(JAVA_HOME)/bin/java.exe
    JAVAC=$(JAVA_HOME)/bin/javac.exe
    JAVAH=$(JAVA_HOME)/bin/javah.exe
    GCC=C:/cygwin64/bin/x86_64-w64-mingw32-gcc-6.4.0.exe
    OPTIONS=-m64 -Wl,--add-stdcall-alias -shared
  TARGET=StackTrace.dll
  else
    echo "Unsupported operating system"
  endif
endif


CLASS_PATH = .


# Define a virtual path for .class in the bin directory
vpath %.class $(CLASS_PATH)

all : clean test

# $@ matches the target, $< matches the first dependancy
$(TARGET) : StackTrace.o
	"$(GCC)" -m64  $(OPTIONS) -o $@ $<

# $@ matches the target, $< matches the first dependancy
StackTrace.o : StackTrace.c StackTrace.h
	"$(GCC)" $(OPTIONS) -I"$(JAVA_HOME)/include" -I"$(JAVA_HOME)/include/$(SYSINC)"  -D__int64="long long" $(DEFINES) -c $< -o $@

# $* matches the target filename without the extension
StackTrace.h : StackTrace.class
	"$(JAVAH)" -classpath $(CLASS_PATH) $*

StackTrace.class: StackTrace.java
	"$(JAVAC)" -target 1.6 -source 1.6 -d . StackTrace.java

Matrix.class: Matrix.java
	"$(JAVAC)" -target 1.6 -source 1.6 -d . Matrix.java
	
clean :
	rm -f StackTrace.h StackTrace.o $(TARGET) StackTrace.class
	
test: $(TARGET) StackTrace.class Matrix.class
	"$(JAVA)" -agentpath:"$(CURRENT)/$(TARGET)" -classpath . StackTrace
